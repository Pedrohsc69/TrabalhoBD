### *Requisitos*
- Todas as entidades devem conter no mínimo( 1 contrutor, 5 atributos encapsulados com gets and settrs)
- Todos os projetos devem conter ( Herança, Ifs, for, arrays, encapsulamento, construtor ...)
- Tudo precisa ter validação de dados.
- Deve existir apenas 1 classe main, que gere tudo o que foi solicitado.
- Todas as entidades precisam ter dados.
- Sistema deve ter lógica.
- Não economizem nos atributos, isso deve ter lógica para não ter entidade com 1 atributo, entidade que podem ter varios atributos e não tem, é um problema.

----------------------------------------------------------------------------------------------------------------------

### *Entidades:*

-- Usuário: A pessoa que usa o aplicativo para controlar suas finanças.
-- Transação: Cada registro de entrada (receita) ou saída (despesa) de dinheiro.
-- Categoria: O tipo da transação. Por exemplo, se você gastar com transporte, essa transação entra na categoria "transporte".

----------------------------------------------------------------------------------------------------------------------

### *O que o aplicativo faz:*

Você vai registrar todas as suas receitas (como o salário) e despesas (como compras de mercado) no aplicativo.
Cada transação será classificada em uma categoria (como alimentação, lazer, etc.).

----------------------------------------------------------------------------------------------------------------------

### *Relatórios mensais:*

O aplicativo vai gerar relatórios mensais, mostrando o total que você gastou ou ganhou em cada categoria (por exemplo, quanto você gastou com transporte no mês).
Ele também pode mostrar alertas, por exemplo, se você estiver perto de ultrapassar um limite de gastos que definiu para uma categoria específica (como não gastar mais de R$ 500 em lazer no mês).
Basicamente, é um aplicativo que ajuda a organizar suas finanças, mostrando de maneira clara para onde está indo o seu dinheiro e se você está dentro do limite de gastos que definiu.

----------------------------------------------------------------------------------------------------------------------

### *Funções:*

-- Edcarlos: Main
-- Jamille: Transação
-- Pedro: Usuário
-- João: Categoria


